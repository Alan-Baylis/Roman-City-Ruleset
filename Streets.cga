

version "2011.1"

import rf:   "Roof.cga" 			
import tex : "TexturesAssets.cga"	
import col : "Colonnade.cga"

#-------Scene Settings			

@Group("SceneSettings",0)
attr elevation 	= 0

@Group("SceneSettings",0) @Range(-800,300)
attr YEAR		= 0

@Group("SceneSettings",0) @Range("OFF","ON")
attr Materials_View		= "OFF"
	const materials			= Materials_View == "ON"
	const noMaterials		= Materials_View == "OFF"

@Group("SceneSettings",0)@Range("HIGH","MED","LOW")
attr LOD					= "LOW"
	const highLOD 				= LOD == "HIGH"
	const medLOD				= LOD == "MED"
	const lowLOD				= LOD == "LOW"
	
#--------Materials
	
@Group ("Materials",1) @Range("Under Construction","Brick","Travertine", "Marble", "None", "Varied")
attr Material				= 	case noMaterials && YEAR >= start_date && YEAR <= end_date: "Varied"
								case materials && YEAR >= construction_start && YEAR <=construction_end: "Under Construction"
								case materials && YEAR >= brick_start && YEAR <=brick_end: "Brick"
								case materials && YEAR >= travertine_start && YEAR <=travertine_end: "Travertine"
								case materials && YEAR >= marble_start && YEAR <=marble_end: "Marble"
								else: "None"
								
	const constr				= Material == "Under Construction" 
	const brick					= Material == "Brick"
	const trav					= Material == "Travertine"
	const marble				= Material == "Marble"
	const noModel				= Material == "None"
		

const MaterialColor			= 	case constr: construction_color
								case brick: brick_color
								case trav: travertine_color
								case marble: marble_color							
								else: wall	
								
#-------General

@Group("General",2) @Range("STREET","STAIRS","WALL","PAVED AREA","CLOACA")
attr building_type			= 	"STREET"

@Group("General",2) @Range("STREET","TRAV_PAVERS")
attr pavingType				= "TRAV_PAVERS"


#-------Street

@Group("Street",3)@Range("STAIRS", "NO STAIRS")
attr withStairs			= "NO STAIRS"

@Group("Street",3)@Range("continuous steps","straight", "wall+stairs")
attr curbType			= "straight"
	const stepCurb	 	= curbType == "continuous steps"
	const straightCurb 	= curbType == "straight"
	const wallCurb		= curbType	== "wall+stairs"
	
@Group("Street",3)	
attr extraHeight 		= 0

@Group("Street",3)
attr extendBelow		= 0

@Group("Street",3)
attr stairW				= 2

@Group("Street",3)
attr streetHeight 		= 0.2

const curbWidth 		= 0//stepDepth
const sidewalkHeight 	= case building_type == "CLOACA": 1.5 else: streetHeight*1.2
const curbHeight 		= sidewalkHeight*1.2

const stepHeight 		= 0.28
const stepDepth 		= .35	
const streetTexTile 	= 5

#-------Wall

@Group("Wall",4)
attr height				= 3

#-------Time Periods

@Group ("Time Period",10) @Order(0) @Range(-800,300)
attr start_date	= 0
@Group ("Time Period",10) @Order(0) @Range(-800,300)
attr end_date	= 0
@Group ("Time Period",10) @Order(1) @Range(-800,300)
attr construction_start	= 0
@Group ("Time Period",10) @Order(2) @Range(-800,300)
attr construction_end	= 0
@Group ("Time Period",10) @Order(3) @Range(-800,300)
attr brick_start		= 0
@Group ("Time Period",10) @Order(4) @Range(-800,300)
attr brick_end			= 0
@Group ("Time Period",10) @Order(5) @Range(-800,300)
attr travertine_start	= 0
@Group ("Time Period",10) @Order(6) @Range(-800,300)
attr travertine_end		= 0
@Group ("Time Period",10) @Order(7) @Range(-800,300)
attr marble_start       = 0
@Group ("Time Period",10) @Order(8) @Range(-800,300)
attr marble_end			= 0

#-------Colors

@Group("Colors",11)
attr base					= case noMaterials || materials && noModel: "#CDC6AD" else: MaterialColor
@Group("Colors",11)@Range( "#EEEEEE", "#F5F5F5","#FFFFFF","#E0E0D1","#AAAAA0")
attr wall					= case noMaterials  || materials && noModel: 20% : "#EEEEEE" 20% : "#F5F5F5" 20% : "#FFFFFF" 20% : "#E0E0D1" else : "#AAAAA0" else: MaterialColor
@Group ("Colors",11)
attr floor					= case noMaterials  || materials && noModel: "#A68F74" else: MaterialColor
@Group ("Colors",11)
attr ground					= case noMaterials  || materials && noModel: "#ADB38F" else: MaterialColor

const construction_color	= "#F7EB9E" 
const brick_color			= "#705C46" 
const travertine_color		= "#E2E8D1" 
const marble_color			= "#F79E9E"

const blue					= "#0066FF"
const red					= "#FF3300"
const green					= "#33CC33"
const pink					= "#FF6699"
const cyan					= "#00FFFF"
const purple				= "#6600CC"
const orange				= "#FF9900"

///////STREET

Crossing -->FlatStreet
Joint --> FlatStreet
Lot --> //t(0,elevation,0)Lot.

///*
		case building_type == "PAVED AREA" && !noModel: Paving
		case building_type == "WALL" && !noModel: Wall
		case building_type == "STREET" && !noModel: StreetShape
		else: NIL
//*/


Street -->
case withStairs == "NO STAIRS":
	FlatStreet
else: 
	alignScopeToAxes()
	//t(0,streetHeight,0)
	split(y){~stepHeight : Step(scope.sy+streetHeight)}*

FlatStreet -->	
	alignScopeToAxes()
	t(0,streetHeight,0)
	color(ground)
	tex.GroundBlock("street",streetTexTile,0.2)

Step(yDim) -->
	extrude (world.y, 100)
	color(ground)
	split(y) {yDim : tex.Block("street", streetTexTile)| ~1 : NIL}
	
//////SIDEWALK

Sidewalk -->
		case stepCurb || wallCurb:
			alignScopeToAxes(y)
			SidewalkAligned(scope.sy,scope.sz)
		else: split(v,unitSpace,0){curbWidth:  extrude(world.y,curbHeight)Curb 
									|~1:[extrude(world.y,-extendBelow) WallPlane]extrude(world.y,sidewalkHeight)Sidewalk2}
	
SidewalkAligned(yDim,zDim) -->
		extrude(world.y,50)
		split(y) {yDim+extraHeight+streetHeight : BaseVolume(yDim+extraHeight+streetHeight) 
																	| ~1: NIL}

BaseVolume(yDim) -->
		comp(f) {front: FrontSteps(scope.sy/stepHeight)
				|back: WallPlane
				|side: WallPlane 
						s(scope.sx/2,'1,'1)
						center(x)
						SideSteps(scope.sy/stepHeight)
				|top :	Sidewalk2 
				}	

///////PAVING & CURB
						
Paving -->
case pavingType == "TRAV_PAVERS":
	t(0,elevation,0)
	[extrude(world.y,-extendBelow) WallPlane]
	extrude(streetHeight)
	color(wall)
	tex.GroundBlock("pavement",streetTexTile,0.2)
else:
	t(0,elevation,0)
	extrude(streetHeight)
	color(ground)
	tex.GroundBlock("street",streetTexTile,0.2)
	
StreetShape -->	
	t(0,elevation,0)
	[extrude(world.y,-extendBelow) WallPlane]
	extrude(streetHeight)
	color(ground)
	tex.GroundBlock("street",streetTexTile,0.2)
	
						
Curb -->
	tex.Block("curb",streetTexTile,streetTexTile,0.2)
	
Sidewalk2  -->
	color(ground)
	tex.Block("curb",streetTexTile,streetTexTile,0.2)


///////STEPS

FrontSteps(n) -->
	case stepCurb: Steps(n)
	case wallCurb: WallPlane split(x){ stairW:Steps(n)|~1: NIL|stairW: Steps(n)|~1: NIL}
	else: NIL

SideSteps(n) -->
	case stepCurb || wallCurb: WallPlane Steps(n)
	else: NIL
	
Steps(n) -->
	 alignScopeToAxes()
	 split(y)	{stepHeight: CurbStep(n) 
	 			| ~1: Steps(n-1)}

CurbStep(idx) -->
	extrude(idx*stepDepth)
	color(ground)
	tex.Block("street", streetTexTile)

///////WALL

Wall -->
	t(0,elevation,0)
	extrude(height)
	WallPlane

WallPlane -->
	color(wall) 
	tex.Block("wall", 8)
	


	