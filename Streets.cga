

version "2011.1"

@Hidden 
import rf:   "_Roof.cga"

@Hidden  			
import tex : "_TexturesAssets.cga"

@Hidden 	
import col : "_Colonnade.cga"

#-------Scene Settings	

@Group("SceneSettings",0)@Range("HIGH","MED","LOW")
attr LOD					= "LOW"
	const highLOD 				= LOD == "HIGH"
	const medLOD				= LOD == "MED"
	const lowLOD				= LOD == "LOW"		

							
#-------General

@Group("General",1)
attr elevation 	= 0

@Group("General",1) @Range("STREET","STAIRS","WALL","PAVED AREA","CLOACA","PAVED BLOCK")
attr building_type			= 	"STREET"

@Group("General",1) @Range("STREET","TRAV_PAVERS")
attr pavingType				= "TRAV_PAVERS"


#-------Street

@Group("Street",3)@Range("STAIRS", "NO STAIRS")
attr withStairs			= "NO STAIRS"

@Group("Street",3)@Range("continuous steps","straight", "wall+stairs")
attr curbType			= "straight"
	const stepCurb	 	= curbType == "continuous steps"
	const straightCurb 	= curbType == "straight"
	const wallCurb		= curbType	== "wall+stairs"
	
@Group("Street",3)	
attr extraHeight 		= 0

@Group("Street",3)
attr extendBelow		= 0

@Group("Street",3)
attr stairW				= 2

@Group("Street",3)
attr streetHeight 		= 0.2

const curbWidth 		= 0//stepDepth
const sidewalkHeight 	= case building_type == "CLOACA": 1.5 else: streetHeight*1.5
const curbHeight 		= sidewalkHeight*1.2

const stepHeight 		= 0.28
const stepDepth 		= .35	
const streetTexTile 	= 5

#-------Wall

@Group("Wall",4)
attr height				= 3


///////STREET

Crossing -->FlatStreet
Joint --> FlatStreet
Lot --> //t(0,elevation,0)Lot.

///*
		case building_type == "PAVED AREA": Paving
		case building_type == "WALL": Wall
		case building_type == "STREET": StreetShape
		case building_type == "PAVED BLOCK": Paving2(scope.sy)
		else: NIL
//*/


Street -->
case withStairs == "NO STAIRS":
	FlatStreet
else: 
	alignScopeToAxes()
	//t(0,streetHeight,0)
	split(y){~stepHeight : Step(scope.sy+streetHeight)}*

FlatStreet -->
	alignScopeToAxes()
	extrude(streetHeight)
	tex.Block("street",streetTexTile,streetTexTile)

Step(yDim) -->
	extrude (world.y, 100)
	split(y) {yDim : tex.Block("street", streetTexTile)| ~1 : NIL}
	
//////SIDEWALK

Sidewalk -->
		case stepCurb || wallCurb:
			alignScopeToAxes(y)
			SidewalkAligned(scope.sy,scope.sz)
		else: split(v,unitSpace,0){curbWidth:  extrude(world.y,curbHeight)Curb 
									|~1:[extrude(world.y,-extendBelow) WallPlane]extrude(world.y,sidewalkHeight)Sidewalk2}
	
SidewalkAligned(yDim,zDim) -->
		extrude(world.y,50)
		split(y) {yDim+extraHeight+streetHeight : BaseVolume(yDim+extraHeight+streetHeight) 
																	| ~1: NIL}

BaseVolume(yDim) -->
		comp(f) {front: FrontSteps(scope.sy/stepHeight)
				|back: WallPlane
				|side: WallPlane 
						s(scope.sx/2,'1,'1)
						center(x)
						SideSteps(scope.sy/stepHeight)
				|top :	Sidewalk2 
				}	

///////PAVING & CURB
						
Paving -->
	t(0,elevation,0)
	extrude(streetHeight)
	PavingType
	
PavingType -->
case pavingType == "STREET":
	tex.GroundBlock("street",streetTexTile,0.2)
else:
	tex.GroundBlock("pavement",streetTexTile,streetTexTile)

	
Paving2(yDim) -->
	extrude(world.y,100)
	split(y){yDim+extraHeight:comp(f){side:tex.Block("wall",10)
			|top:PavingType /*tex.Block("pavement",streetTexTile,streetTexTile)*/}
			}
	
StreetShape -->	
	t(0,elevation,0)
	[extrude(world.y,-extendBelow) WallPlane]
	extrude(streetHeight)
	tex.GroundBlock("street",streetTexTile,0.2)
	
						
Curb -->
	tex.Block("curb",streetTexTile,streetTexTile,0.2)
	
Sidewalk2  -->
	tex.Block("curb",streetTexTile,streetTexTile,0.2)


///////STEPS

FrontSteps(n) -->
	case stepCurb: Steps(n)
	case wallCurb: WallPlane split(x){ stairW:Steps(n)|~1: NIL|stairW: Steps(n)|~1: NIL}
	else: NIL

SideSteps(n) -->
	case stepCurb || wallCurb: WallPlane Steps(n)
	else: NIL
	
Steps(n) -->
	 alignScopeToAxes()
	 split(y)	{stepHeight: CurbStep(n) 
	 			| ~1: Steps(n-1)}

CurbStep(idx) -->
	extrude(idx*stepDepth)
	tex.Block("street", streetTexTile)

///////WALL

Wall -->
	t(0,elevation,0)
	extrude(world.y,height)
	tex.Block("solid_wall", 8)

WallPlane -->
tex.Block("wall",10)

	


	