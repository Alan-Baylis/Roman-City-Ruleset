/**
 * File:    BasilicaMagnesia.cga
 
 * Created: 10 Sep 2012 21:47:00 GMT
 * Author:  msaldana
 */

version "2014.1"

import rf:   "Roof.cga" 			
import tex : "TexturesAssets.cga"	

#-------Scene Settings

@Group("SceneSettings",0)
attr elevation 	= 0

@Group("SceneSettings",0) @Range(-800,300)
attr YEAR		= 0

@Group("SceneSettings",0) @Range("OFF","ON")
attr Materials_View		= "OFF"
	const materials			= Materials_View == "ON"
	const noMaterials		= Materials_View == "OFF"

@Group("SceneSettings",0)@Range("HIGH","MED","LOW")
attr LOD					= "LOW"
	const highLOD 				= LOD == "HIGH"
	const medLOD				= LOD == "MED"
	const lowLOD				= LOD == "LOW"
	
#--------Materials
	
@Group ("Materials",1) @Range("Under Construction","Brick","Travertine", "Marble", "None", "Varied")
attr Material				= 	case noMaterials && YEAR >= start_date && YEAR <= end_date: "Varied"
								case materials && YEAR >= construction_start && YEAR <=construction_end: "Under Construction"
								case materials && YEAR >= brick_start && YEAR <=brick_end: "Brick"
								case materials && YEAR >= travertine_start && YEAR <=travertine_end: "Travertine"
								case materials && YEAR >= marble_start && YEAR <=marble_end: "Marble"
								else: "None"
								
	const constr				= Material == "Under Construction" 
	const brick					= Material == "Brick"
	const trav					= Material == "Travertine"
	const marble				= Material == "Marble"
	const noModel				= Material == "None"
		

const MaterialColor			= 	case constr: construction_color
								case brick: brick_color
								case trav: travertine_color
								case marble: marble_color							
								else: wall

#-------General
@Group("General",2)
attr height 				= 10
								
								
#-------Roof
@Group ("Roof",5)
attr roof_angle = 18.5

#-------Time Periods

@Group ("Time Period",8) @Order(0) @Range(-800,300)
attr start_date	= 0
@Group ("Time Period",8) @Order(0) @Range(-800,300)
attr end_date	= 0
@Group ("Time Period",8) @Order(1) @Range(-800,300)
attr construction_start	= 0
@Group ("Time Period",8) @Order(2) @Range(-800,300)
attr construction_end	= 0
@Group ("Time Period",8) @Order(3) @Range(-800,300)
attr brick_start		= 0
@Group ("Time Period",8) @Order(4) @Range(-800,300)
attr brick_end			= 0
@Group ("Time Period",8) @Order(5) @Range(-800,300)
attr travertine_start	= 0
@Group ("Time Period",8) @Order(6) @Range(-800,300)
attr travertine_end		= 0
@Group ("Time Period",8) @Order(7) @Range(-800,300)
attr marble_start       = 0
@Group ("Time Period",8) @Order(8) @Range(-800,300)
attr marble_end			= 0

#-------Colors

@Group("Colors",9)@Range( "#EEEEEE", "#F5F5F5","#FFFFFF","#E0E0D1","#AAAAA0")
attr wall					= case noMaterials  || materials && noModel: 20% : "#EEEEEE" 20% : "#F5F5F5" 20% : "#FFFFFF" 20% : "#E0E0D1" else : "#AAAAA0" else: MaterialColor
@Group("Colors",9)@Range("#A8763D", "#ff6600",  "#9E4F0E", "#B56A00", "#A3650D", "#AB6118")
attr roof					= case noMaterials  || materials && noModel: 15% : "#A8763D" 15% : "#9E4F0E" 15% : "#B56A00" 15% : "#A3650D" else : "#AB6118" else: MaterialColor


const construction_color	= "#F7EB9E" 
const brick_color			= "#705C46" 
const travertine_color		= "#E2E8D1" 
const marble_color			= "#F79E9E"
Lot -->
innerRect
Lot2(scope.sz)

Lot2(zDim) -->
t(0,elevation,0)
split(z){zDim*.05: Apse(zDim)|zDim*.18: Bema(zDim) |~1: Nave(zDim)|zDim*.08: Narthex(zDim)  } 


Nave(zDim) -->
extrude(height/2)
comp(f) {top: split(x){'.25: Aisle(split.index) |~1: CenterNave(zDim) |'.25: Aisle(split.index)} |side: Wall}

CenterNave(zDim) -->
extrude (height/2)
comp(f) {top: roofGable(roof_angle)Roof|side: Wall}

Aisle(n) -->
case n == 2:
extrude(height/4)
comp(f){top:roofShed(roof_angle*.8,1)Roof|side: Wall}

else :
extrude(height/4)
comp(f){top:roofShed(roof_angle*.8,3)Roof|side: Wall}

Roof -->
comp(f) {top: color (roof) rf.Roof(1,1) | side: Wall}

Bema(zDim) -->
extrude(height*.6)
comp(f) {top: roofGable(roof_angle)Roof |side: Wall}

Apse(zDim) -->
extrude(height/2)
comp(f) {top: roofShed (roof_angle,2) Roof |side: Wall}

Narthex(zDim) -->
extrude(height/2)
comp(f) {top: roofShed (roof_angle) Roof |side: Wall}
print((zDim*.15)+(zDim*.09)+(zDim*.07))

Wall -->
color(wall)
tex.Block("wall",10)